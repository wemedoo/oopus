@using System.Globalization
@using sReportsV2.Common.Enums;
@using sReportsV2.Common.Constants;
@using sReportsV2.Common.Extensions;

<form id="advancedFilterForm" name="AdvancedFilterForm" onsubmit="return false">
    <div class="modal fade" id="advancedFilterModal" tabindex="-1" role="dialog" aria-labelledby="advancedFilterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content modal-content-advanced">
                <div class="float-right filter-close-btn">
                    <img alt="" class="close-modal" src="/css/img/icons/close_black.svg">
                </div>

                <div class="modal-body modal-body-advanced" id="advancedFilterModalContent">
                    <div class="d-flex advanced-filter-header">
                        <img alt="" class="mr-3" src="/css/img/icons/advanced_filter.svg"> @sReportsV2.Cache.Resources.TextLanguage.Advanced_filter
                    </div>
                    <div class="d-flex">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.From
                            </div>
                            <div class="filter-date-time datetime-picker-container">
                                <div class="date-wrapper input-border mr-auto w-60 d-flex">
                                    @await Html.PartialAsync("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                                    {
                                        InputAttributes = new Dictionary<object, object> {
                                            { "class", "date-helper d-inline-block border-0 date-width input-padding filter-input" },
                                            { "value", ViewBag.FilterData != null && ViewBag.FilterData.RequestTimestampFrom != null ? ViewBag.FilterData.RequestTimestampFrom.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "" },
                                            { "id", "dateFrom"},
                                            { "name", "dateFrom"}
                                        }
                                    })
                                    <input id="requestTimestampFrom" type="text" class="date-time-local d-none form-element-field filter-input" value="@(ViewBag.FilterData != null && ViewBag.FilterData.RequestTimestampFrom != null ? ViewBag.FilterData.RequestTimestampFrom.ToString("s") : "")" />
                                    <div class="img-wrapper">
                                        <!img class=" d-inline-block" src="/css/img/icons/datetime_field.svg" @Html.DateTimeDisabled(readOnly: false)>
                                    </div>
                                </div>
                                <div class="time-wrapper w-35 input-border">
                                    <input type="text"
                                           placeholder="@DateConstants.TimeFormatDisplay"
                                           class="time-part time-helper d-inline-block border-0 input-padding filter-input w-90"
                                           value="@(ViewBag.FilterData != null && ViewBag.FilterData.RequestTimestampFrom != null ? ViewBag.FilterData.RequestTimestampFrom.GetTimePart() : "")"
                                           id="timeFrom"
                                           name="timeFrom">
                                    <div class="clock-wrapper">
                                        <i class="fas fa-clock" @Html.TimeDisabled(readOnly: false)></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.To_
                            </div>
                            <div class="filter-date-time datetime-picker-container">
                                <div class="date-wrapper input-border mr-auto w-60 d-flex">
                                    @await Html.PartialAsync("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                                    {
                                        InputAttributes = new Dictionary<object, object> {
                                            { "class", "date-helper d-inline-block border-0 date-width input-padding filter-input" },
                                            { "value", ViewBag.FilterData != null && ViewBag.FilterData.RequestTimestampTo != null ? ViewBag.FilterData.RequestTimestampTo.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "" },
                                            { "id", "dateTo"},
                                            { "name", "dateTo"}
                                        }
                                    })
                                    <input id="requestTimestampTo" type="text" class="date-time-local d-none form-element-field filter-input" value="@(ViewBag.FilterData != null && ViewBag.FilterData.RequestTimestampTo != null ? ViewBag.FilterData.RequestTimestampTo.ToString("s") : "")" />
                                    <div class="img-wrapper">
                                        <!img class=" d-inline-block" src="/css/img/icons/datetime_field.svg" @Html.DateTimeDisabled(readOnly: false)>
                                    </div>
                                </div>
                                <div class="time-wrapper w-35 input-border">
                                    <input type="text"
                                           placeholder="@DateConstants.TimeFormatDisplay"
                                           class="time-part time-helper d-inline-block border-0 input-padding filter-input w-90"
                                           value="@(ViewBag.FilterData != null && ViewBag.FilterData.RequestTimestampTo != null ? ViewBag.FilterData.RequestTimestampTo.GetTimePart() : "")"
                                           id="timeTo"
                                           name="timeTo">
                                    <div class="clock-wrapper">
                                        <i class="fas fa-clock" @Html.TimeDisabled(readOnly: false)></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex margin-top-10">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                Http Status Code
                            </div>
                            <select class="filter-input arrow-select" id="httpStatusCode">
                                <option value=""></option>
                                @foreach (KeyValuePair<short, string> option in ViewBag.HttpStatusCodes)
                                {
                                    <option id="HttpStatusCode_@option.Key" data-display="@option.Value" value="@option.Key" @(ViewBag.FilterData.HttpStatusCode == option.Key ? "selected" : "")>@option.Value</option>
                                }
                            </select>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                Api Request Direction
                            </div>
                            <select class="filter-input arrow-select" id="apiRequestDirection">
                                <option value=""></option>
                                @foreach (ApiRequestDirection option in Enum.GetValues(typeof(ApiRequestDirection)))
                                {
                                    int optionNum = (int)option;
                                    <option id="ApiRequestDirection_@optionNum" data-display="@option" value="@optionNum" @(ViewBag.FilterData.ApiRequestDirection == option ? "selected" : "")>@option</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="d-flex margin-top-10">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                Contains
                            </div>
                            <input type="text" class="filter-input" id="requestContains" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.RequestContains : "")">
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                Api Name
                            </div>
                            <input type="text" class="filter-input" id="apiName" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.ApiName : "")">
                        </div>
                    </div>
                    <div class="d-flex margin-top-10">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                Screening Number
                            </div>
                            <input type="text" class="filter-input" id="screeningNumber" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.ScreeningNumber : "")">
                        </div>
                        <div class="advanced-filter-item filter-item">
                            
                        </div>
                    </div>

                    <div class="advanced-filter-line">

                    </div>
                    <div class="d-flex mt-3 position-relative margin-top-20">
                        <div class="button-wrapper-filter filter-button float-right" id="submitFilterButton">
                            <button class="btn btn-filter-primary w-100 h-100" onclick="advanceFilter()"> @sReportsV2.Cache.Resources.TextLanguage.Filter</button>
                        </div>
                        <div class="button-wrapper-filter cancel-filter-btn float-right" id="close">
                            <a class="btn advanced-cancel" data-dismiss="modal" aria-label="Close">
                                @sReportsV2.Cache.Resources.TextLanguage.Cancel
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

