@using sReportsV2.DTOs.DTOs.CodeAliases.DataOut;
@using sReportsV2.Common.Extensions;
@using sReportsV2.Common.Constants;
@{
    var userCookieData = ViewBag.UserCookieData;
    bool hasCreateUpdatePerm = userCookieData.UserHasPermission(PermissionNames.UpdateAlias, ModuleNames.CodeSet);
    bool hasDeletePerm = userCookieData.UserHasPermission(PermissionNames.DeleteAlias, ModuleNames.CodeSet);
}

<div class="display-container padding-bottom-15">
    <div class="display-flex">
        <div class="input-container position-relative">
            <div class="label filter-label" style="margin-right:39px">
                @sReportsV2.Cache.Resources.TextLanguage.CodeId
            </div>
            <div class="padding-left-5">
                @ViewBag.FilterAliasData.CodeId
            </div>
        </div>
        <div class="input-container position-relative">
            <div class="label filter-label">
                @sReportsV2.Cache.Resources.TextLanguage.CodeDisplay
            </div>
            <div class="padding-left-5">
                @ViewBag.FilterAliasData.CodeDisplay
            </div>
        </div>
        @if (userCookieData.UserHasPermission(PermissionNames.CreateAlias, ModuleNames.CodeSet))
        {
            <button type="button" class="btn btn-add-new alias-button" onclick="showAliasModal(event, '@sReportsV2.Cache.Resources.TextLanguage.AddNewAlias', 0)">
                <i class="fas fa-plus-circle resize-circle"></i> <span class="text-add-new"> @sReportsV2.Cache.Resources.TextLanguage.AddNewAlias</span>
            </button>
        }
    </div>
</div>

<div>
    <div class="table-responsive filter-border">
        <table class="table table-striped table-border">
            <thead class="color-header">
                <tr class="table-header-row">
                    <th id="System" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('System')">@sReportsV2.Cache.Resources.TextLanguage.System.ToUpper()</th>
                    <th id="InboundAlias" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('InboundAlias')">@sReportsV2.Cache.Resources.TextLanguage.Inbound.ToUpper()</th>
                    <th id="OutboundAlias" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('OutboundAlias')">@sReportsV2.Cache.Resources.TextLanguage.Outbound.ToUpper()</th>
                    <th id="ActiveFrom" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('ActiveFrom')">@sReportsV2.Cache.Resources.TextLanguage.ValidFrom.ToUpper()</th>
                    <th id="ActiveTo" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('ActiveTo')">@sReportsV2.Cache.Resources.TextLanguage.ValidTo.ToUpper()</th>
                    <th style="border-bottom: unset;border-top: unset;"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (CodeAliasViewDataOut entry in Model.Data)
                {
                    <tr id="row-@entry.AliasId" class="table-content-row" 
                        @if (hasCreateUpdatePerm)
                        {
                            <text>onclick="editAlias(event, '@sReportsV2.Cache.Resources.TextLanguage.EditAlias', @entry.AliasId)"</text>
                        }>
                        <td>@entry.System</td>
                        <td>@entry.InboundAlias</td>
                        <td>@entry.OutboundAlias</td>
                        <td>@entry.ActiveFrom.ToDateZoned(ViewBag.DateFormat as string)</td>
                        <td>@(entry.ActiveTo.ToActiveToDateFormat(ViewBag.DateFormat as string))</td>
                        <td>
                            @if (hasCreateUpdatePerm || hasDeletePerm)
                            {
                                <div class="dropdown show">
                                    <a class="dropdown-button" href="#" data-toggle="dropdown" role="button" id="dropdownMenuLink-@entry.AliasId" aria-haspopup="true" aria-expanded="false">
                                        <img alt="" class="dots" src="/css/img/icons/3dots.png">
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@entry.AliasId">
                                        @if (hasCreateUpdatePerm)
                                        {
                                            <a class="dropdown-item editCodeSet pointer hover view-a" onclick="showAliasModal(event, '@sReportsV2.Cache.Resources.TextLanguage.EditAlias', @entry.AliasId)">
                                                <img alt="" class="edit-svg-size" src="/css/img/icons/edit.svg">
                                                @sReportsV2.Cache.Resources.TextLanguage.Edit
                                            </a>
                                        }
                                        @if (hasDeletePerm)
                                        {
                                            <a class="dropdown-item editCodeSet pointer hover view-a" onclick="removeAlias(event, '@entry.AliasId', '@entry.InboundAliasId', '@(entry.OutboundAliasId != null ? entry.OutboundAliasId : 0)')">
                                                <img alt="" class="edit-svg-size" src="/css/img/icons/remove.svg">
                                                @sReportsV2.Cache.Resources.TextLanguage.Delete
                                            </a>
                                        }
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>

                }
            </tbody>
        </table>
        @if (Model.Data.Count == 0)
        {
            <div class="no-result-content">
                <img alt="" class="margin-" src="/css/img/icons/no_results.svg">
                <br>
                <div class="no-result-text">@sReportsV2.Cache.Resources.TextLanguage.NoResultFound</div>
            </div>
        }
        @if (Model.Data.Count > 0)
        {
            <div class="pager-container">
                @await Html.PartialAsync("Pagination")
            </div>
        }
    </div>
</div>
