@{
    ViewBag.Title = "FormGeneralInfo";
    string activeLanguage = ViewBag.UserCookieData.ActiveLanguage;
    bool disabled = ViewBag.Disabled == "disabled" ? true : false;
}
@using sReportsV2.DTOs.Form.DataOut;
@using sReportsV2.Common.Enums;
@using sReportsV2.Common.Extensions;
@model FormDataOut

<form class="designer-item-form" id="formGeneralInfoForm">
    <input type="hidden" id="elementId" value="@(Model != null && !string.IsNullOrWhiteSpace(Model.Id)  ? Model.Id : "formIdPlaceHolder")" />
    <input type="hidden" id="lastUpdate" value="@(Model != null && Model.LastUpdate != null ? Model.LastUpdate.Value.ToString("o") : "")" />
    <!--BEGIN GENERAL INFO-->
    <div class="designer-form-section">
        <div class="designer-form-section-title">
            @sReportsV2.Cache.Resources.TextLanguage.Form_General_Info
        </div>

        <div class="designer-form-input-group">
            <div class="label filter-label">
                @sReportsV2.Cache.Resources.TextLanguage.Title
            </div>
            <input required class="designer-form-input item-title" id="title" name="title" type="text" value="@(Model != null && Model.Title != null ? Model.Title : "")" @ViewBag.Disabled />
        </div><!--
        --><div class="designer-form-input-group">
            <div class="label filter-label">
                @sReportsV2.Cache.Resources.TextLanguage.State
            </div>
            <select required class="designer-form-input" id="state" name="state" type="text" @ViewBag.Disabled>
                @foreach (FormDefinitionState s in Enum.GetValues(typeof(FormDefinitionState)).Cast<FormDefinitionState>())
                {
                    <option value="@s" @((Model != null && Model.State == s) || (Model == null && s == FormDefinitionState.DesignPending) ? "selected" : "")>@sReportsV2.Cache.Resources.TextLanguage.ResourceManager.GetString(s.ToString())</option>
                }
            </select>
        </div>
    </div>
    <div class="designer-form-section">

        <div class="designer-form-input-group full-width">
            <div class="label filter-label">
                @sReportsV2.Cache.Resources.TextLanguage.Description
            </div>
            <textarea class="designer-form-input" id="description" name="description" value="@(Model != null && Model.DocumentProperties != null ? Model.DocumentProperties.Description : "")" @ViewBag.Disabled>@(Model != null && Model.DocumentProperties != null ? Model.DocumentProperties.Description : "")</textarea>
        </div>
        <div class="checkbox-group">
            <label class="form-checkbox-label">
                <span>@sReportsV2.Cache.Resources.TextLanguage.AvailableForTask?</span>
                <input name="availableForTask" value="availableForTask" id="availableForTask" class="form-checkbox-field" type="checkbox" @(Model.AvailableForTask ? "checked" : string.Empty) @ViewBag.Disabled/>
                <i class="form-checkbox-button table-checkbox"></i>
            </label>
        </div>
    </div>
    @{
        RenderOrganizationsContainer(disabled); 
    }
    <div id="obligatoryArea" class="designer-form-section thesaurus-section">
        <div class="label filter-label">
            @sReportsV2.Cache.Resources.TextLanguage.SelectMissingValueCodes
        </div>
        <div class="obligatory-table">
            <div>
                <div class="d-flex">
                    <div>
                        @{
                            int length = ViewBag.NullFlavors.Count;
                            int half = length / 2;
                        }
                        @for (int i = 0; i < half; i++)
                        {
                            <label class="form-checkbox-label reset-margin">
                                <input id="checkBoxGroup" name="checkBoxGroup" data-id="@ViewBag.NullFlavors[i].Id" value="@ViewBag.NullFlavors[i].Id" class="form-checkbox-field user-role form-checkbox formNullFlavors" type="checkbox" checked="@(Model != null ? Model.IsNullFlavorChecked(ViewBag.NullFlavors[i].Id) : false)" @ViewBag.Disabled />
                                <i class="form-checkbox-button custom-checkbox"></i>
                                <span class="organization-types sentence-case">
                                    @ViewBag.NullFlavors[i].Thesaurus.GetPreferredTermByTranslationOrDefault(activeLanguage)
                                </span>
                            </label>
                        }
                    </div>
                    <div>
                        @for (int i = half; i < length; i++)
                        {
                            <label class="form-checkbox-label reset-margin">
                                <input id="checkBoxGroup" name="checkBoxGroup" data-id="@ViewBag.NullFlavors[i].Id" value="@ViewBag.NullFlavors[i].Id" class="form-checkbox-field user-role form-checkbox formNullFlavors" type="checkbox" checked="@(Model != null ? Model.IsNullFlavorChecked(ViewBag.NullFlavors[i].Id) : false)" @ViewBag.Disabled />
                                <i class="form-checkbox-button custom-checkbox"></i>
                                <span class="organization-types sentence-case">
                                    @ViewBag.NullFlavors[i].Thesaurus.GetPreferredTermByTranslationOrDefault(activeLanguage)
                                </span>
                            </label>
                        }
                    </div>
                </div>
                <div id="checkBoxGroup-error"></div>
            </div>
        </div>
    </div>
    <div class="designer-form-section thesaurus-section">
        <div class="designer-form-section-title thesaurus-title">
            @sReportsV2.Cache.Resources.TextLanguage.ThesaurusEntry
        </div>
        @await Html.PartialAsync("~/Views/Form/DragAndDrop/ThesaurusFilterModal.cshtml")
    </div>
    <div class="designer-form-section">
        <div class="designer-form-section-title">
            @sReportsV2.Cache.Resources.TextLanguage.Version
        </div><!--
        --><div id="versionWarning" class="sreports-warning" style="display: none;">
            <div class="warning-icon">
                <img alt="" src="/css/img/icons/warning.svg" />
            </div>
            @sReportsV2.Cache.Resources.TextLanguage.FormVersionChangeWarning
        </div><!--
        --><div class="designer-form-input-group">
            <div class="label filter-label">
                @sReportsV2.Cache.Resources.TextLanguage.Major
            </div>
            <input required class="designer-form-input version" id="versionMajor" name="versionMajor" type="number" min="0" step="1" value="@(Model != null && Model.Version != null ? Model.Version.Major.ToString() : "")" @ViewBag.Disabled />
        </div><!--
        --><div class="designer-form-input-group">
            <div class="label filter-label">
                @sReportsV2.Cache.Resources.TextLanguage.Minor
            </div>
            <input required id="versionMinor" class="designer-form-input version" name="versionMinor" type="number" min="0" value="@(Model != null && Model.Version != null ? Model.Version.Minor.ToString() : "")" @ViewBag.Disabled />
        </div>
    </div>
    <div class="designer-form-section">
        <div class="designer-form-section-title">
            OOMNIA
        </div><!--
        --><div class="designer-form-input-group">
               <div class="label filter-label">
                   OOMNIA ID
               </div>
            <input class="designer-form-input" id="oomniaId" name="oomniaId" type="text" value="@(Model != null ? Model.OomniaId : "")" @ViewBag.Disabled />
        </div>
    </div>
    <!--END GENERAL INFO-->
    @await Html.PartialAsync("~/Views/Form/DragAndDrop/FormGeneralInfoDocumentProperties.cshtml")

    @await Html.PartialAsync("~/Views/Form/DragAndDrop/FormEpisodeOfCareInfo.cshtml")
    @*<div class="chechbox-container right">
            <div class="checkbox-group">
                <label class="form-checkbox-label">
                    <span>Integrate with patient</span>
                    <input id="disablePatientData" value="disablePatientData" @(!Model.DisablePatientData ? "checked" : string.Empty) class="form-checkbox-field" type="checkbox" @ViewBag.Disabled>
                    <i class="form-checkbox-button table-checkbox"></i>
                </label>
            </div>
        </div>*@

    <div class="button-container">
        <div class="cancel-button cancel-modal-action">
            @sReportsV2.Cache.Resources.TextLanguage.Back
        </div>
        @if (!ViewBag.ReadOnly)
        {
            <div class="submit-button" id="submit-general-form-info">@sReportsV2.Cache.Resources.TextLanguage.UpdateData</div>
        }
    </div>
</form>

<script>
    $(document).ready(function () {
        initializeFormValidator();
        $('.formNullFlavors').click(function (event) {
            var checkbox = $(this);
            if (!checkbox.prop('checked')) {
            isNullFlavorUsedInAnyField(checkbox.data('id'))
                .then(function (isUncheckDisabled) {
                    if (isUncheckDisabled) {
                        toastr.error("It's not possible to uncheck this checkbox, because this code is used in some of field/s");
                        checkbox.prop('checked', true);
                    }
                })
                .catch(function (error) {
                    console.error(error);
                });
            }
        });
    });
</script>

@functions {
    private void RenderOrganizationsContainer(bool disabled)
    {
        <div class="designer-form-section">
            <div class="designer-form-section-title">
                @sReportsV2.Cache.Resources.TextLanguage.Organizations
            </div>
            <div id="dropdownSearch" class="position-relative dropdown-search">
                <div id="searchOrganization">
                    <input placeholder="@sReportsV2.Cache.Resources.TextLanguage.Select_Organization" autocomplete="off" class="designer-form-input filter-input" id="searchOrganizationByName" name="searchOrganizationByName" type="text" @ViewBag.Disabled />
                </div>
                <div id="organizationOptions" class="clinical-domain-options" aria-labelledby="search">
                </div>
            </div>
            <div id="selectedOrganizations" class="d-flex mt-2">
                @foreach (var organization in Model.Organizations)
                {
                    <div class="filter-element" data-org-id="@organization.Id">
                        @organization.Name
                        @if (!disabled)
                        {
                            <img alt="" src="/css/img/icons/Administration_remove.svg" class="ml-2 remove-form-org">
                        }
                    </div>
                }
            </div>
        </div>
    }
}