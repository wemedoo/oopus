@using sReportsV2.Common.Extensions;
@using sReportsV2.Common.Constants;
@{
    var userCookieData = ViewBag.UserCookieData;
    bool hasCreateUpdatePerm = userCookieData.UserHasPermission(PermissionNames.Update, ModuleNames.Designer);
    bool hasDeletePerm = userCookieData.UserHasPermission(PermissionNames.Delete, ModuleNames.Designer);
    bool hasViewPerm = userCookieData.UserHasPermission(PermissionNames.View, ModuleNames.Designer);
}
<div class="table-responsive filter-border">
    <table class="table table-striped table-border">
        <thead class="color-header">
            <tr class="table-header-row">
                <th id="Title" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('Title')">@sReportsV2.Cache.Resources.TextLanguage.Title.ToUpper()</th>
                <th id="Version" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('Version')">@sReportsV2.Cache.Resources.TextLanguage.Version.ToUpper()</th>
                <th id="EntryDatetime" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('EntryDatetime')">@sReportsV2.Cache.Resources.TextLanguage.EntryDateTime.ToUpper()</th>
                <th id="State" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('State')">@sReportsV2.Cache.Resources.TextLanguage.State_.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;"></th>
            </tr>
        </thead>
        <tbody>

            @foreach (sReportsV2.DTOs.Form.DataOut.FormDataOut form in Model.Data)
            {
                <tr id="row-@form.Id" onclick="clickedRow(event, @hasCreateUpdatePerm.ToJsBoolean(),'@form.ThesaurusId','@form.Version.Id')" class="table-content-row">
                    <td>@form.Title</td>
                    <td>@form.Version.Major.@form.Version.Minor</td>
                    <td>@form.EntryDatetime.ToTimeZonedDateTime(ViewBag.UserCookieData.TimeZoneOffset as string, ViewBag.DateFormat as string)</td>
                    <td class="@(form.State == sReportsV2.Common.Enums.FormDefinitionState.ReadyForDataCapture ? "color-green-primary" : "")">@sReportsV2.Cache.Resources.TextLanguage.ResourceManager.GetString(form.State.ToString())</td>
                    <td>
                        @if (hasCreateUpdatePerm || hasDeletePerm || hasViewPerm)
                        {
                            <div class="dropdown show">
                                <a class="dropdown-button" href="#" role="button" id="dropdownMenuLink-@form.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img alt="" class="dots" src="/css/img/icons/3dots.png">
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@form.Id">
                                    @if (hasCreateUpdatePerm)
                                    {
                                        <a class="dropdown-item d-flex" href="#" onclick="showGenerateModal(event, '@form.Id')">
                                            <img alt="" class="edit-svg-size generate-translation-margin" src="/css/img/icons/generate_ translate_12x12.svg"><div>@sReportsV2.Cache.Resources.TextLanguage.GenerateTranslations</div>
                                        </a>
                                    }
                                    @if (hasCreateUpdatePerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="editEntity(event,'@form.ThesaurusId', '@form.Version.Id')"><img alt="" class="edit-svg-size" src="/css/img/icons/edit.svg">@sReportsV2.Cache.Resources.TextLanguage.Edit</a>
                                    }
                                    @if (hasViewPerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="viewEntity(event,'@form.ThesaurusId', '@form.Version.Id')"><img alt="" class="edit-svg-size" src="/css/img/icons/info_grey.svg">@sReportsV2.Cache.Resources.TextLanguage.View</a>
                                    }
                                    @if (hasDeletePerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="showDeleteModal(event, '@form.Id', 'deleteFormDefinition', '@(form.LastUpdate != null ? form.LastUpdate.Value.ToString("o") : DateTime.Now.ToString("o"))')">
                                            <img alt="" class="edit-svg-size" src="/css/img/icons/remove.svg">@sReportsV2.Cache.Resources.TextLanguage.Delete
                                        </a>
                                    }
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.Data.Count == 0)
    {
        <div class="no-result-content">
            <img alt="" class="margin-" src="/css/img/icons/no_results.svg">
            <br>
            <div class="no-result-text">@sReportsV2.Cache.Resources.TextLanguage.NoResultFound</div>
        </div>
    }

    @if (Model.Data.Count > 0)
    {
        <div class="pager-container">
            @await Html.PartialAsync("Pagination")
        </div>
    }
</div>

<div class="modal fade" id="generateModal" tabindex="-1" role="dialog" aria-labelledby="generateModalLabel" aria-hidden="true"></div>