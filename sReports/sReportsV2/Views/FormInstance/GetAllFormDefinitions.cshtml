@using sReportsV2.Common.Helpers
@using sReportsV2.DTOs.Form;
@using sReportsV2.DTOs.Form.DataOut;
@using sReportsV2.Common.Constants;

@model sReportsV2.DTOs.Pagination.PaginationDataOut<FormDataOut, FormFilterDataIn>

@{
    ViewBag.Title = @sReportsV2.Cache.Resources.TextLanguage.DataCaptureEngine;
    var userCookieData = ViewBag.UserCookieData;
}

@await Html.PartialAsync("Breadcrumb", new ViewDataDictionary(ViewData) { { "level1", @sReportsV2.Cache.Resources.TextLanguage.DataCaptureEngine }, { "activeLevel", 1 } })
<div class="table-container border-0">
    <div class="header header-new">
        @sReportsV2.Cache.Resources.TextLanguage.DataCaptureEngine
        @if (userCookieData.UserHasPermission(PermissionNames.Download, ModuleNames.Engine))
        {
            <div class="dropdown show float-right dropleft">
                <a class="dropdown-button" href="#" role="button" id="dropdownMenuLink-group" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <button id="btns" class="btn btn-filter-primary btns" style="height:unset"><img alt="" src="/css/img/icons/dropdown.svg" /></button>
                </a>
                <div class="dropdown-menu-customize dropdown-menu" aria-labelledby="dropdownMenuLink-group">
                    <a class="dropdown-item" href="#" onclick="downloadCSVs(event)"><i class="fas fa-arrow-down mr-2"></i>@sReportsV2.Cache.Resources.TextLanguage.DownloadCsvs</a>
                    <a class="dropdown-item" href="#" onclick="downloadPdfs(event)"><i class="fas fa-arrow-down mr-2"></i>@sReportsV2.Cache.Resources.TextLanguage.DownloadPdfs</a>
                    <a class="dropdown-item" href="#" onclick="downloadXLSXs(event)"><i class="fas fa-arrow-down mr-2"></i>@sReportsV2.Cache.Resources.TextLanguage.DownloadXlsxs</a>
                </div>
            </div>
        }

    </div>
    @await Html.PartialAsync("~/Views/Form/FormFilterGroup.cshtml")

    <div id="tableContainer"></div>

</div>
@await Html.PartialAsync("~/Views/Form/AdvancedFilterModal.cshtml")


<script>
    var defaultFilter = @Html.Raw(Json.Serialize(ViewBag.FilterData));
</script>

@Html.Raw(ScriptHelper.RenderBundle("js/getAllFormDefinitions-bundle.min.js"))