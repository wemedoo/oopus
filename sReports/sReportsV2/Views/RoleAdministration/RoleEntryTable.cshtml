@using sReportsV2.DTOs.DTOs.AccessManagment.DataOut;
@using sReportsV2.DTOs.CodeEntry.DataOut;
@using sReportsV2.Common.Constants;
@using sReportsV2.Common.Extensions;
@{
    var userCookieData = ViewBag.UserCookieData;
    bool hasCreateUpdatePerm = userCookieData.UserHasPermission(PermissionNames.Update, ModuleNames.Administration);
    bool hasViewPerm = userCookieData.UserHasPermission(PermissionNames.View, ModuleNames.Administration);
    string activeLanguage = ViewBag.UserCookieData.ActiveLanguage;
}
<div class="table-responsive filter-border">
    <table class="table table-striped table-border">
        <thead class="color-header">
            <tr class="table-header-row">
                <th id="Name" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('PreferredTerm')">@sReportsV2.Cache.Resources.TextLanguage.Name.ToUpper()</th>
                <th id="Description" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('Definition')">@sReportsV2.Cache.Resources.TextLanguage.Description.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (CodeDataOut entry in Model.Data)
            {
                bool entryIsActive = entry.IsActive();
                string onClickHandler = entryIsActive ? string.Format("clickedRow(event, {0}, '{1}')", hasCreateUpdatePerm.ToJsBoolean(), entry.Id) : string.Format("viewEntity(event, '{0}')", entry.Id);
                <tr id="row-@entry.Id" onclick="@onClickHandler" class="table-content-row">
                    <td width="20%">
                        @entry.Thesaurus.GetPreferredTermByTranslationOrDefault(activeLanguage)
                    </td>
                    <td>@entry.Thesaurus.GetDefinitionByTranslationOrDefault(activeLanguage)</td>
                    <td>
                        @if((hasCreateUpdatePerm && entryIsActive) || hasViewPerm)
                        {
                            <div class="dropdown show">
                                <a class="dropdown-button" href="#" role="button" id="dropdownMenuLink-@entry.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img alt="" class="dots" src="/css/img/icons/3dots.png">
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@entry.Id">
                                    @if (hasCreateUpdatePerm && entryIsActive)
                                    {
                                        <a class="dropdown-item" href="#" onclick="editEntity(event,'@entry.Id')"><img alt="" class="edit-svg-size" src="/css/img/icons/edit.svg">@sReportsV2.Cache.Resources.TextLanguage.Edit</a>
                                    }
                                    @if (hasViewPerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="viewEntity(event,'@entry.Id')"><img alt="" class="edit-svg-size" src="/css/img/icons/info_grey.svg">@sReportsV2.Cache.Resources.TextLanguage.View</a>
                                    }
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pager-container">
        @await Html.PartialAsync("Pagination")
    </div>
</div>
