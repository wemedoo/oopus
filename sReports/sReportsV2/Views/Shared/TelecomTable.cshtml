@using sReportsV2.DTOs.Common;
@using sReportsV2.DTOs.CodeEntry.DataOut;
@using sReportsV2.Common.Extensions;
@model List<TelecomDTO>

@{
    string activeLanguage = ViewBag.UserCookieData.ActiveLanguage;
    string containerName = ViewBag.ActiveTelecomContainer;
    bool noTelecoms = Model == null || Model.Count == 0;
    List<CodeDataOut> telecomUses = ViewBag.TelecomUse as List<CodeDataOut>;
    List<CodeDataOut> telecomSystems = ViewBag.TelecomSystem as List<CodeDataOut>;
}
<div class="person-margin">
    <span class="identifiers-info identifier-padd">@sReportsV2.Cache.Resources.TextLanguage.Telecoms</span>
    @if (!ViewBag.ReadOnly)
    {
        <button type="button" class="btn btn-add-new float-right" onclick="showTelecomModal(event, '@containerName', 'false')">
            <i class="fas fa-plus-circle resize-circle"></i> <span class="text-add-new"> @sReportsV2.Cache.Resources.TextLanguage.AddNew</span>
        </button>
    }
</div>

<div class="identifier-line"></div>

<div id="@containerName" class="@(noTelecoms ? "identifier-line-bottom" : "") telecom-container-wrapper">
    <table class="codes-table">
        <thead>
            <tr>
                <th><span class="identifier-name">@sReportsV2.Cache.Resources.TextLanguage.Telecom_System</span></th>
                <th><span class="identifier-name">@sReportsV2.Cache.Resources.TextLanguage.Telecom_Value</span></th>
                <th><span class="identifier-name">@sReportsV2.Cache.Resources.TextLanguage.Telecom_Use</span></th>
                <th></th>
            </tr>
        </thead>

        <tbody class="identifer-table text-table">
            @if (Model != null)
            {
                foreach (TelecomDTO telecom in Model)
                {
                    CodeDataOut telecomUseEnum = telecomUses.FirstOrDefault(g => g.Id == telecom.UseCD);
                    string use = telecomUseEnum != null ? telecomUseEnum.Thesaurus.GetPreferredTermByTranslationOrDefault(activeLanguage) : string.Empty;
                    CodeDataOut telecomSystemEnum = telecomSystems.FirstOrDefault(g => g.Id == telecom.SystemCD);
                    string system = telecomSystemEnum != null ? telecomSystemEnum.Thesaurus.GetPreferredTermByTranslationOrDefault(activeLanguage) : string.Empty;
                    <tr class="edit-raw tr telecom-entry" data-value="@telecom.Id" data-version="@telecom.RowVersion">
                        <td data-property="system" data-value="@(telecom.SystemCD.HasValue ? telecom.SystemCD.ToString() : "")" class="custom-td-first">
                            @Html.RenderTableCell(@system)
                        </td>
                        <td data-property="value" data-value="@telecom.Value" class="custom-td">
                            @Html.RenderTableCell(@telecom.Value)
                        </td>
                        <td data-property="use" data-value="@(telecom.UseCD.HasValue ? telecom.UseCD.ToString() : "")" class="custom-td">
                            @Html.RenderTableCell(@use)
                        </td>
                        <td class="custom-td-last position-relative telecom-actions-cell">
                            @if (!ViewBag.ReadOnly)
                            {
                                <img alt="" src="/css/img/icons/editing.svg" class="telecom-entry" />
                                <i class="remove-table-row-icon remove-telecom"></i>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>