@using System.Globalization
@using sReportsV2.Common.Enums;
@using sReportsV2.DTOs.CodeEntry.DataOut;
@using sReportsV2.Common.Constants;
@using sReportsV2.DTOs.Patient;
@using sReportsV2.DTOs.DTOs.Patient.DataOut;
@using sReportsV2.Cache.Extensions;
@model PatientDataOut

@{
    var userCookieData = ViewBag.UserCookieData;
    PatientChemotherapyDataDataOut patientChemotherapyData = Model != null && Model.PatientChemotherapyData != null ? Model.PatientChemotherapyData : new PatientChemotherapyDataDataOut();
    string activeLanguage = userCookieData.ActiveLanguage;
    List<CodeDataOut> genders = ViewBag.Genders as List<CodeDataOut>;
    CodeDataOut genderEnum = genders.FirstOrDefault(g => g.Id == Model.GenderId);
    string genderTranslated = genderEnum != null ? genderEnum.Thesaurus.GetPreferredTermByTranslationOrDefault(activeLanguage) : string.Empty;
    bool hasUpdatePerm = userCookieData.UserHasPermission(PermissionNames.Update, ModuleNames.ClinicalOncology);
    List<CodeDataOut> contraceptions = ViewBag.Contraceptions as List<CodeDataOut>;
    List<CodeDataOut> diseaseContexts = ViewBag.DiseaseContexts as List<CodeDataOut>;
}

<div class="smart-oncology-patient-detail-header">
    <div class="row">
        <div class="col">
            <span class="smart-oncology-patient-detail-title">@sReportsV2.Cache.Resources.TextLanguage.Clinical_Oncology_Patient_Management</span>
        </div>
        <div class="col">
            <span class="smart-oncology-patient-detail-title ml-2 hidden-md">@sReportsV2.Cache.Resources.TextLanguage.History_of_Oncological_Disease</span>
            @if (hasUpdatePerm)
            {
                <span class="smart-oncology-patient-edit-btn" onclick="editPatient('@Model.Id')">
                    <img alt="" src="/css/img/icons/edit_pencil_02.svg">
                    <span class="pl-2 btn-label">@sReportsV2.Cache.Resources.TextLanguage.Edit</span>
                </span>
            }
        </div>
    </div>
</div>
<div class="smart-oncology-patient-detail-container">
    <div class="row ml-0">
        <div class="col-12 col-lg mr-lg-2">
            <text>
                @{
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.FirstName, Model.Name);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.SecondName, Model.FamilyName);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Gender, genderTranslated);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Date_of_birth, Model.BirthDate != null ? Model.BirthDate.Value.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "");
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Identification_number, patientChemotherapyData.IdentificationNumber);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Allergies, patientChemotherapyData.Allergies != null ? patientChemotherapyData.Allergies.Replace(";", ", ") : "");
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Patient_is_informed_for, patientChemotherapyData.PatientInformedFor);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Patient_Informed_by, patientChemotherapyData.PatientInformedBy);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Patient_info_signed_on, patientChemotherapyData.PatientInfoSignedOn != null ? patientChemotherapyData.PatientInfoSignedOn.Value.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "");
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Copy_delivered_on, patientChemotherapyData.CopyDeliveredOn != null ? patientChemotherapyData.CopyDeliveredOn.Value.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "");
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Capability_to_work, string.Concat(patientChemotherapyData.CapabilityToWork, " ", "%"));
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Desire_to_have_children, patientChemotherapyData.DesireToHaveChildren ? sReportsV2.Cache.Resources.TextLanguage.Yes : sReportsV2.Cache.Resources.TextLanguage.No_);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Fertility_conservation, patientChemotherapyData.FertilityConservation ? sReportsV2.Cache.Resources.TextLanguage.Yes : sReportsV2.Cache.Resources.TextLanguage.No_);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Semen_cryopreservation, patientChemotherapyData.SemenCryopreservation ? sReportsV2.Cache.Resources.TextLanguage.Yes : sReportsV2.Cache.Resources.TextLanguage.No_, Model.GenderName == Gender.Male.ToString());
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Egg_cell_cryopreservation, patientChemotherapyData.EggCellCryopreservation ? sReportsV2.Cache.Resources.TextLanguage.Yes : sReportsV2.Cache.Resources.TextLanguage.No_, Model.GenderName == Gender.Female.ToString());
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Sexual_health_addressed, patientChemotherapyData.SexualHealthAddressed ? sReportsV2.Cache.Resources.TextLanguage.Yes : sReportsV2.Cache.Resources.TextLanguage.No_);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Copy_delivered_on, patientChemotherapyData.CopyDeliveredOn != null ? patientChemotherapyData.CopyDeliveredOn.Value.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "");
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Copy_delivered_on, patientChemotherapyData.CopyDeliveredOn != null ? patientChemotherapyData.CopyDeliveredOn.Value.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "");
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Contraception, @patientChemotherapyData.ConvertContraceptionCDToDisplayName(contraceptions, activeLanguage));
                    @*RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Clinical_trials, Model.ClinicalTrials != null ? string.Join(", ", Model.ClinicalTrials.Select(x => x.Name)) : "")*@
                }
            </text>
        </div>
        <div class="col-12 col-lg ml-lg-2 mt-3 mt-lg-0">
            <div class="margin-bottom-15 visible-md">
                <div class="row">
                    <span class="smart-oncology-patient-detail-title">@sReportsV2.Cache.Resources.TextLanguage.History_of_Oncological_Disease</span>
                </div>
            </div>
            <text>
                @{
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Previous_Treatment, patientChemotherapyData.PreviousTreatment ? sReportsV2.Cache.Resources.TextLanguage.Yes : sReportsV2.Cache.Resources.TextLanguage.No_);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Treatment_in_Graubunden, patientChemotherapyData.TreatmentInCantonalHospitalGraubunden ? sReportsV2.Cache.Resources.TextLanguage.Yes : sReportsV2.Cache.Resources.TextLanguage.No_, patientChemotherapyData.PreviousTreatment);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.History_of_Oncological_Disease, Html.ActionLink(sReportsV2.Cache.Resources.TextLanguage.Link, "PatientOncologyDiseaseHistory", "SmartOncology", new { patientId = Model.Id }, new { target = "_blank", rel = "noreferrer", @class = "advanced-link" }), patientChemotherapyData.PreviousTreatment && patientChemotherapyData.TreatmentInCantonalHospitalGraubunden);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Hospital_praxis_of_previous_treatment, patientChemotherapyData.HospitalOrPraxisOfPreviousTreatments != null ? patientChemotherapyData.HospitalOrPraxisOfPreviousTreatments.Replace(";", ", ") : "", patientChemotherapyData.PreviousTreatment && !patientChemotherapyData.TreatmentInCantonalHospitalGraubunden);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Disease_context_at_initial_presentation, !patientChemotherapyData.DiseaseContextAtInitialPresentationCD.HasValue ? "" : @patientChemotherapyData.ConvertDiseaseContextAtInitialPresentationCDToDisplayName(diseaseContexts, activeLanguage), patientChemotherapyData.PreviousTreatment && !patientChemotherapyData.TreatmentInCantonalHospitalGraubunden);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Stage_at_initial_presentation, patientChemotherapyData.StageAtInitialPresentation, patientChemotherapyData.PreviousTreatment);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Disease_context_at_current_presentation, !patientChemotherapyData.DiseaseContextAtCurrentPresentationCD.HasValue ? "" : @patientChemotherapyData.ConvertDiseaseContextAtCurrentPresentationCDToDisplayName(diseaseContexts, activeLanguage));
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Stage_at_current_presentation, patientChemotherapyData.StageAtCurrentPresentation);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Anatomy, patientChemotherapyData.Anatomy);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Morphology, patientChemotherapyData.Morphology);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Therapeutic_context, patientChemotherapyData.TherapeuticContext);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Chemotherapy_Type, patientChemotherapyData.ChemotherapyType);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Chemotherapy_Course, patientChemotherapyData.ChemotherapyCourse);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Chemotherapy_Cycle, patientChemotherapyData.ChemotherapyCycle);
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.First_Day_of_Chemotherapy, patientChemotherapyData.FirstDayOfChemotherapy != null ? patientChemotherapyData.FirstDayOfChemotherapy.Value.ToString(ViewBag.DateFormat, CultureInfo.InvariantCulture) : "");
                    RenderPatientCellData(sReportsV2.Cache.Resources.TextLanguage.Consecutive_chemotherapy_days, patientChemotherapyData.ConsecutiveChemotherapyDays.HasValue ? patientChemotherapyData.ConsecutiveChemotherapyDays.Value : 1);
                }
            </text>
        </div>
    </div>
</div>

@functions {
    private void RenderPatientCellData(string name, object value, bool condition = true)
    {
        if (condition)
        {
            <div class="row pl-0">
                <div class="col-5 column data-name">@name:</div>
                <div class="col-7 column">
                    <div class="input">
                        <div>
                            @value
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}
