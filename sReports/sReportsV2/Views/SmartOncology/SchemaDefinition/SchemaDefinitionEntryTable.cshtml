@using sReportsV2.DTOs.DTOs.SmartOncology.ChemotherapySchema.DataOut;
@using sReportsV2.Common.Extensions;
@using sReportsV2.Common.Constants;
@{
    var userCookieData = ViewBag.UserCookieData;
    bool hasUpdatePerm = userCookieData.UserHasPermission(PermissionNames.Update, ModuleNames.ClinicalOncology);
    bool hasViewPerm = userCookieData.UserHasPermission(PermissionNames.View, ModuleNames.ClinicalOncology);
    bool hasDeletePerm = userCookieData.UserHasPermission(PermissionNames.Delete, ModuleNames.ClinicalOncology);
}
<div class="table-responsive filter-border">
    <table class="table table-striped table-border">
        <thead class="color-header">
            <tr class="table-header-row">
                <th id="ChemotherapySchemaId" class="sort-arrow" style="border-bottom: unset;border-top: unset; width: 15%" onclick="sortTable('ChemotherapySchemaId')">ID</th>
                <th id="Name" class="sort-arrow" style="border-bottom: unset; border-top: unset; " onclick="sortTable('Name')">@sReportsV2.Cache.Resources.TextLanguage.Name.ToUpper()</th>
                <th id="EntryDatetime" class="sort-arrow" style="border-bottom: unset; border-top: unset; " onclick="sortTable('EntryDatetime')">@sReportsV2.Cache.Resources.TextLanguage.Created_on.ToUpper()</th>
                <th style="border-bottom: unset; border-top: unset; width: 3%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (ChemotherapySchemaDataOut entry in Model.Data)
            {
                <tr id="row-@entry.Id" onclick="clickedRow(event, @hasUpdatePerm.ToJsBoolean(), '@entry.Id')" class="table-content-row ">
                    <td>@entry.Id</td>
                    <td>@(entry.Name ?? sReportsV2.Cache.Resources.TextLanguage.Predefined_schema_name)</td>
                    <td>@entry.EntryDatetime.ToTimeZoned(ViewBag.DateFormat as string)</td>
                    <td>
                        @if (hasUpdatePerm || hasDeletePerm || hasViewPerm)
                        {
                            <div class="dropdown show">
                                <a class="dropdown-button" href="#" role="button" id="dropdownMenuLink-@entry.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img alt="" class="dots" src="/css/img/icons/3dots.png">
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@entry.Id">
                                    @if (hasUpdatePerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="editEntity(event, '@entry.Id')"><img alt="" class="edit-svg-size" src="/css/img/icons/edit.svg">@sReportsV2.Cache.Resources.TextLanguage.Edit</a>
                                    }
                                    @if (hasViewPerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="viewEntity(event, '@entry.Id')"><img alt="" class="edit-svg-size" src="/css/img/icons/info_grey.svg">@sReportsV2.Cache.Resources.TextLanguage.View</a>
                                    }
                                    @if (hasDeletePerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="showDeleteModal(event, '@entry.Id', 'deleteEntity')"><img alt="" class="edit-svg-size" src="/css/img/icons/remove.svg">@sReportsV2.Cache.Resources.TextLanguage.Delete</a>
                                    }
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.Data.Count == 0)
    {
        <div class="no-result-content">
            <img alt="" src="/css/img/icons/no_results.svg">
            <br>
            <div class="no-result-text">@sReportsV2.Cache.Resources.TextLanguage.NoResultFound</div>
        </div>
    }
    @if (Model.Data.Count > 0)
    {
        <div class="pager-container">
            @await Html.PartialAsync("Pagination")
        </div>
    }
</div>
