@using sReportsV2.DTOs.CodeEntry.DataOut
@using sReportsV2.DTOs.DTOs.ThesaurusEntry.DataOut
@using sReportsV2.Common.Constants;
@using sReportsV2.Common.Extensions;

@{
    var userCookieData = ViewBag.UserCookieData;
    bool hasCreateUpdatePerm = userCookieData.UserHasPermission(PermissionNames.Update, ModuleNames.Thesaurus);
    bool hasDeletePerm = userCookieData.UserHasPermission(PermissionNames.Delete, ModuleNames.Thesaurus);
    bool hasViewPerm = userCookieData.UserHasPermission(PermissionNames.View, ModuleNames.Thesaurus);
    string activeLanguage = userCookieData.ActiveLanguage;
    List<CodeDataOut> states = ViewBag.ThesaurusStates as List<CodeDataOut>;
    int? productionStateCD = states?.Where(x => x.Thesaurus.Translations.Any(m => m.PreferredTerm == CodeAttributeNames.Production)).FirstOrDefault()?.Id;
    int? draftStateCD = states?.Where(x => x.Thesaurus.Translations.Any(m => m.PreferredTerm == CodeAttributeNames.Draft)).FirstOrDefault()?.Id;
}

<div class="table-responsive filter-border">
    <table class="table table-striped table-border">
        <thead class="color-header">
            <tr class="table-header-row">
                <th id="ThesaurusEntryId" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('ThesaurusEntryId')">04.0MT ID</th>
                <th id="PreferredTerm" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('PreferredTerm')">@sReportsV2.Cache.Resources.TextLanguage.Preferred_term.ToUpper()</th>
                <th id="Definition" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('Definition')">@sReportsV2.Cache.Resources.TextLanguage.Definition.ToUpper()</th>
                <th id="State" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('State')">@sReportsV2.Cache.Resources.TextLanguage.State_.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;"></th>
                <th style="border-bottom: unset;border-top: unset;"></th>
            </tr>
        </thead>
        <tbody>

            @foreach (ThesaurusEntryViewDataOut entry in Model.Data)
            {
                <tr id="row-@entry.ThesaurusEntryId" onclick="clickedRow(event, @hasCreateUpdatePerm.ToJsBoolean(), '@entry.ThesaurusEntryId')" class="table-content-row">
                    <td>@entry.ThesaurusEntryId</td>
                    <td class="truncate">@entry.PreferredTerm</td>
                    <td class="truncate">@entry.Definition</td>
                    <td class="@(entry.StateCD == productionStateCD ? "color-green-primary" : "")">
                        @entry.State
                    </td>
                    <td class="table-more" onclick="thesaurusMoreModal(event,'@entry.ThesaurusEntryId')">
                        @sReportsV2.Cache.Resources.TextLanguage.More
                    </td>
                    <td>
                        @if (hasCreateUpdatePerm || (hasViewPerm && entry.StateCD == draftStateCD) || hasDeletePerm || hasViewPerm)
                        {
                            <div class="dropdown show">
                                <a class="dropdown-button" href="#" role="button" id="dropdownMenuLink-@entry.ThesaurusEntryId" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img alt="" class="dots" src="/css/img/icons/3dots.png">
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@entry.ThesaurusEntryId">
                                    @if (hasCreateUpdatePerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="editEntity(event,'@entry.ThesaurusEntryId')"><img alt="" class="edit-svg-size" src="/css/img/icons/edit.svg">@sReportsV2.Cache.Resources.TextLanguage.Edit</a>
                                    }
                                    @if (hasViewPerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="viewEntity(event,'@entry.ThesaurusEntryId')"><img alt="" class="edit-svg-size" src="/css/img/icons/info_grey.svg">@sReportsV2.Cache.Resources.TextLanguage.View</a>
                                    }
                                    @if (hasDeletePerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="removeThesaurusEntry(event,'@entry.ThesaurusEntryId')"><img alt="" class="edit-svg-size" src="/css/img/icons/remove.svg">@sReportsV2.Cache.Resources.TextLanguage.Remove</a>
                                    }
                                    @if (entry.StateCD == draftStateCD && hasViewPerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="reviewThesaurus(event,'@entry.ThesaurusEntryId')">@sReportsV2.Cache.Resources.TextLanguage.ReviewThesaurus</a>
                                    }
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.Data.Count == 0)
    {
        <div class="no-result-content">
            <img alt="" class="margin-" src="/css/img/icons/no_results.svg">
            <br>
            <div class="no-result-text">@sReportsV2.Cache.Resources.TextLanguage.NoResultFound</div>
        </div>
    }
    @if (Model.Data.Count > 0)
    {
        <div class="pager-container">
            @await Html.PartialAsync("Pagination")
        </div>
    }
</div>

